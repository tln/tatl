attrs = 'def="' @defExpr '"' 
	| 'for="' @forExpr '"'
    | 'if="' @ifExpr '"' 
	| 'filt="' @filtExpr '"'
	| 'param="' @paramExpr '"'
	| 'set="' @setExpr '"' 
	| 'elide="' @elideExpr '"';
addExpr = expr {filter} {';' addExpr} ;
defExpr = name:NAME args:arglist {filter+:filter} ;
setExpr = name:NAME filter+:setFilter {filter+:filter} ;
setFilter = '|' @('tag' | 'contents') ;
arglist = '(' [@+:arg {',' @+:arg} [',']] ')' ;
arg = @NAME | @'*' ;
forExpr = [n1:lvar [',' n2:lvar] 'in'] expr:expr ;
ifExpr = @test ;
filtExpr = (@call | @path) {'|' (@call | @path)} ;
paramExpr = @+:lvar {',' @+:lvar} ;
useExpr = path;
elideExpr = ['elide'] ;

top = '{' {set+:set ';'} (set+:set | ({exprs+:expr ';'} [emit:topemitexpr])) '}' ;
topemitexpr = star:starexp | filtexp:filtexp ;
filter = '|' (  @call | @path | @string) ;
filtexp = expr:expr {filter+:filter} ;
starexp = @('*' | '++') ':' @NAME ;
set = lvar:lvar '=' ('{' expr:expr '}') ;
lvar = NAME ;
dottedPath =  @+:NAME {'.' @+:NAME}* ;
dotPath = @+:'.' [@+:NAME {'.' @+:NAME}*] ;
externalPath = module:NAME '::' path+:NAME {'.' path+:NAME} ;
path = path:(externalPath | dotPath | dottedPath) lookup:[lookup] ;
lookup = '[' @simpleexpr ']' ;
value = number | string ;
number = NUMBER ;
string = STRING ;
map = '{' [@+:member {',' @+:member}] '}' ;
member = ( nkey:NAME | skey:STRING) ':' val:expr ;

test = regex | comp ;
regex = expr:simpleexpr '~' re:re ;
re = REGEX ;
comp = @+:simpleexpr ( {@+:compop @+:simpleexpr}+ 
                     | [@+:eqop @+:simpleexpr] 
					 ) ;
eqop = '==' | '!=' ;
compop = '<=' | '<' | '>=' | '>';
simpleexpr = call | path | number | string | list | map ;
expr = ternary | range | simpleexpr;
ternary = test:test '?' true:expr ':' false:expr ;
case = case:expr matches:{match}+ otherwise:[':' @expr];
match = (op:'~=' expr:expr | op:'~~' expr:re) '->' result:expr; 
range = simpleexpr (  '...' | '..' ) simpleexpr ;
list = '[' [@+:expr {',' @+:expr} [',']]  ']' ;
call = fn:path '(' [arg+:expr {',' arg+:expr} [',']] ')' ;
REGEX = ?/[/].*?[/]/?;
NAME = ?/[a-zA-Z_][a-zA-Z0-9_]*/? ;
INT = ?/[0-9]+/? ;
DOT = '.' ;
DOTS =   DOT | '.' {'.'}+ ;
NUMBER = ?/-?[0-9]+([.][0-9]+([eE][+-]?[0-9]+)?)?/? ;
WS = (  ' ' | '\t') ;
NL =   '\n' | '\r' ;
STRING = ?/(['"]).*?\1/?;
PYEXPR = '(' O [PYEXPR] O ')';
O = ?/[^()]*/?;

