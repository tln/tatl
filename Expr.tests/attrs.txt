def="foo"
for="var in expr"
for="expr"
for="key, value in expr"
for="var = expr; key in expr"
if="expr"
if="var = expr; expr"
def="name(arg, arg)"
def="name(arg, arg) |filter"
def="name(*)"
def="name(arg) = expr"
set="var"
param="var"
param="var, var"
use="template::html(expr, expr)"
use="template::html"
use="var = expr; var2 = expr; template::html"
{var}
{var.var}
{template::var}
{.}
{var[0]}
{.[0]}
{var[var]}
{(expr)}
{(dot)}
{(dot.foo)}
{macro(var, var)}
{var = path}
{var = "value"}}
{var = expr}
{var = (path); path}
{1...5}
{0..5}
{[var, "val", 3]}
{[var, "val", 3, *0..9]}
{{name: var1, name2: "value"}}
{{name: var1, name2: "value", *foo, name3: "value"}}
{expr |afilter}
{test ? value : value}
